Inheritance: 
	Inheriting the methods and variables from a parent entity

	Why?
		Promotes code reusue 

	Java?
		We achieve inheritance using the "extends" keyword 
		or the "implements" keyword, to get class based inheritance. 
		A child class can inherit methods and attributes from its
		parent class/interface.


Abstraction: 
	Concept of hiding implementation to show functionality. 
	(We hide away impelemntation - how it works- so that we can focus on our
	own business logic)
	
	Why?
		Allows us to focus on our own level tasks. 

	Java?
		Interfaces (full abstraction) and 
			Abstract Classes (partial abstraction)


Polymorphism 
	"To take many forms". From inheritance we inherit our parents mehtods 		
		and variables. We're allowed to modify these methods to complete
		different actions.

	Why? 
		We get flexibility to have different actions from our behaviours. 

	Java?
		Overriding (runtime polymorhpism) and 
			Overloading (compile time polymorphsim) !
		
		(What can't you O?)
		(What do you need to do to achieve O?)
		(Difference betwee Overrding and overloading?)


Encapsulation 
	The pracitice of restricting access to resoucres within your class. 
	Ensure data isn't accessible without the appropriate permissions. 

	Why?
		I don't want accidental or malicious manipulation of data 
		within my class!

	Java?
		public, protected, default (implicit) and private! 
			


	

	
	
		
